[gd_scene load_steps=9 format=2]

[ext_resource path="res://environment/tile.png" type="Texture" id=1]

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

/* GLES2-friendly soft glow */
uniform float radius_px : hint_range(0.0, 24.0) = 4.0;  // blur radius in pixels
uniform float strength  : hint_range(0.0, 4.0)  = 1.2;  // how strong the glow
uniform int   quality   = 1;  // 1 = 9 taps, 2 = 17 taps

void fragment() {
    vec4 base = texture(TEXTURE, UV);

    // pre-multiplied samples to avoid color bleeding from transparent borders
    vec3 acc = base.rgb * base.a;
    float w  = base.a;

    vec2 texel = TEXTURE_PIXEL_SIZE * max(radius_px, 0.0);

    // 8-neighbour ring
    vec2 o1 = vec2(texel.x, 0.0);
    vec2 o2 = vec2(0.0, texel.y);
    vec2 o3 = vec2(texel.x, texel.y);

    vec4 s;

    s = texture(TEXTURE, UV + o1); acc += s.rgb * s.a; w += s.a;
    s = texture(TEXTURE, UV - o1); acc += s.rgb * s.a; w += s.a;
    s = texture(TEXTURE, UV + o2); acc += s.rgb * s.a; w += s.a;
    s = texture(TEXTURE, UV - o2); acc += s.rgb * s.a; w += s.a;
    s = texture(TEXTURE, UV + o3); acc += s.rgb * s.a; w += s.a;
    s = texture(TEXTURE, UV - o3); acc += s.rgb * s.a; w += s.a;
    s = texture(TEXTURE, UV + vec2(o3.x, -o3.y)); acc += s.rgb * s.a; w += s.a;
    s = texture(TEXTURE, UV + vec2(-o3.x, o3.y)); acc += s.rgb * s.a; w += s.a;

    if (quality >= 2) {
        // second ring, farther out
        vec2 r2 = texel * 2.5;
        vec2 d1 = vec2(r2.x, 0.0);
        vec2 d2 = vec2(0.0, r2.y);
        vec2 d3 = vec2(r2.x, r2.y);

        s = texture(TEXTURE, UV + d1); acc += s.rgb * s.a; w += s.a;
        s = texture(TEXTURE, UV - d1); acc += s.rgb * s.a; w += s.a;
        s = texture(TEXTURE, UV + d2); acc += s.rgb * s.a; w += s.a;
        s = texture(TEXTURE, UV - d2); acc += s.rgb * s.a; w += s.a;
        s = texture(TEXTURE, UV + d3); acc += s.rgb * s.a; w += s.a;
        s = texture(TEXTURE, UV - d3); acc += s.rgb * s.a; w += s.a;
        s = texture(TEXTURE, UV + vec2(d3.x, -d3.y)); acc += s.rgb * s.a; w += s.a;
        s = texture(TEXTURE, UV + vec2(-d3.x, d3.y)); acc += s.rgb * s.a; w += s.a;
    }

    vec3 blur = acc / max(w, 1e-4);          // blurred color of the sprite
    vec3 out_rgb = clamp(base.rgb + blur * strength, 0.0, 1.0);

    COLOR = vec4(out_rgb, base.a);           // keep original alpha
}
"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 9 )
shader_param/radius_px = 8.752
shader_param/strength = 0.606
shader_param/quality = 1

[sub_resource type="ShaderMaterial" id=8]

[sub_resource type="ConvexPolygonShape2D" id=10]
points = PoolVector2Array( 32, 32, 0, 32, 0, 0, 32, 0 )

[sub_resource type="ConvexPolygonShape2D" id=2]
points = PoolVector2Array( 32, 32, 0, 32, 0, 0, 32, 0 )

[sub_resource type="ConvexPolygonShape2D" id=3]
points = PoolVector2Array( 32, 32, 0, 32, 0, 0, 32, 0 )

[sub_resource type="TileSet" id=4]
0/name = "blue_tile"
0/texture = ExtResource( 1 )
0/tex_offset = Vector2( 0, 0 )
0/material = SubResource( 8 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 32, 32 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape = SubResource( 10 )
0/shape_one_way = false
0/shape_one_way_margin = 1.0
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 10 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
0/z_index = 0
1/name = "purple_tile"
1/texture = ExtResource( 1 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 32, 0, 32, 32 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape = SubResource( 2 )
1/shape_one_way = false
1/shape_one_way_margin = 1.0
1/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 2 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
1/z_index = 0
2/name = "pink_tile"
2/texture = ExtResource( 1 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 64, 0, 32, 32 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape = SubResource( 3 )
2/shape_one_way = false
2/shape_one_way_margin = 1.0
2/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 3 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
2/z_index = 0

[node name="GridTilemap" type="TileMap" groups=["tiles"]]
material = SubResource( 6 )
position = Vector2( -480, -272 )
tile_set = SubResource( 4 )
cell_size = Vector2( 32, 32 )
format = 1
